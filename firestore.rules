rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function authed(){
      return request.auth!=null;
    }

    function matchesUser(data){
      return request.auth.uid in data.userId;
    }

    function notUpdating(field){
      return !(field in request.resource.data) || resource.data[field]== request.resource.data[field]
    }

    match /fluxes/{fluxId} {
      allow read: if (authed());
      allow create: if(authed() && matchesUser(request.resource.data));
      allow update: if (authed() && matchesUser(resource.data) );
      allow delete: if (authed() && matchesUser(resource.data));
    }

    match /lines/{lineId} {
      allow read: if (authed());
      allow create: if(authed() && matchesUser(request.resource.data));
      allow update: if (authed() && matchesUser(resource.data) );
      allow delete: if (authed() && matchesUser(resource.data));
    }
    
    match /budgets/{budgetsId} {
     function matchesUserBudgets(data){
      return request.auth.token.name in data.userList;
    }
    
      allow read: if (authed());
      allow create: if(authed() && matchesUserBudgets(request.resource.data));
      allow update: if (authed() && matchesUserBudgets(resource.data) );
      allow delete: if (authed() && matchesUserBudgets(resource.data));
    }

    match /tasks/{taskId} {
     function matchesUserTasks(data){
      return request.auth.token.name in data.options.userList;
    }
       allow read: if (authed());
      allow create: if(authed() && matchesUserTasks(request.resource.data));
      allow update: if (authed() && matchesUserTasks(resource.data) );
      allow delete: if (authed() && matchesUserTasks(resource.data));
    }

    match /users/{userId} {
      function matchesUpdateUser(){
        return request.auth.uid == userId;
      }

      allow read: if true;
      allow create: if(authed() && matchesUpdateUser());
      allow update: if (authed() && matchesUpdateUser() );
      allow delete: if (authed() && matchesUpdateUser());
    }
  }
}